<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>What's new in version 2.0?</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=4292>
<meta name=layout-width content=928>


<!--(Links)=========================================================-->

 <link rel='stylesheet' href='81HelpRev_ns.css'>
<script type="text/javascript" language="JavaScript" title="WebHelpSplitCss">
<!--
if (navigator.appName !="Netscape")
{   document.write("<link rel='stylesheet' href='81HelpRev.css'>");}
//-->
</script>
<style type="text/css">
<!--
img_whs1 {border: none; width: 875px; height: 33px; float: none; border-style: none; border-style: none;}
p.whs2 {font-family: Verdana, sans-serif; color: #000080; margin-left: 0px;}
p.whs3 {font-family: Verdana, sans-serif; color: #000080; margin-left: 0px; font-weight: normal;}
h4.whs4 {font-family: Verdana, sans-serif;}
p.whs5 {font-family: Verdana, sans-serif;}
p.whs6 {text-align: Right; font-family: Verdana, sans-serif;}
img_whs7 {border: none; width: 47px; height: 19px; float: none; border-style: none; border-style: none;}
p.whs8 {text-align: Right; font-family: Verdana, sans-serif; font-weight: bold;}
p.whs9 {font-family: 'Lucida Console', monospace;}
p.whs10 {text-align: Right; font-weight: bold; color: #0000ff; font-family: 'Lucida Console', monospace;}
p.whs11 {x-text-underline: normal; font-family: Verdana, sans-serif; font-weight: bold; /*begin!kadov{{*/ text-decoration: underline; /*}}end!kadov*/ }
ul.whs12 {list-style: disc;}
h4.whs13 {font-family: Verdana, sans-serif; font-size: 10pt;}
p.whs14 {font-family: Verdana, sans-serif; font-weight: bold;}
p.whs15 {font-family: Verdana, sans-serif; text-align: right;}
-->
</style>
<script type="text/javascript" language="JavaScript">
<!--
if ((navigator.appName == "Netscape") && (parseInt(navigator.appVersion) == 4))
{
  var strNSS = "<style type='text/css'>";
  strNSS += "p.whs2 {margin-left:1; }";
  strNSS += "p.whs3 {margin-left:1; }";
  strNSS +="</style>";
  document.write(strNSS);
}
//-->
</script>
<script type="text/javascript" language="JavaScript" title="WebHelpInlineScript">
<!--
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//-->
</script>
<style type="text/css">
<!--
  div.WebHelpPopupMenu {position:absolute; left:0px; top:0px; z-index:4; visibility:hidden;}
-->
</style>
<script type="text/javascript" language="javascript1.2" src="whmsg.js"></script>
<script type="text/javascript" language="javascript" src="whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="whtopic.js"></script>
</head>

<!--(Body)==========================================================-->


<body>

<script type="text/javascript" language="javascript1.2">
<!--
if (window.gbWhTopic)
{
	if (window.addTocInfo)
	{
	addTocInfo("Release Notes\nWhat's new in version 2.0");
addButton("show",BTN_TEXT,"Show","","","","",0,0,"","","");

	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(1);

	if (window.setRelStartPage)
	{
	setRelStartPage("mapobjects_help.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}
}
else
	if (window.gbIE4)
		document.location.reload();
//-->
</script>
<h1><img src="MO-Java-Whats-NewBanner.gif" x-maintain-ratio="TRUE" width="875px" height="33px" border="0" class="img_whs1"></h1>

<h1><a name=WhatsNewInVersion2></a><span style="font-family: Verdana, sans-serif;">What's 
 new in version 2.0</span></h1>

<p class="whs2"><span style="color: #000000;"><font color=black >1.</font></span> 
 <a href="#Server_sideMappingComponents">Server-side Mapping Components</a></p>

<p class="whs2"><span style="color: #000000;"><font color=black >2.</font></span> 
 <a href="#Projections">Projections</a></p>

<p class="whs2"><span style="color: #000000;"><font color=black >3.</font></span> 
 <a href="#LayoutView">Layout View</a></p>

<p class="whs2"><span style="color: #000000;"><font color=black >4.</font></span> 
 <a href="#ProjectSaveLoad">&quot;Project&quot; Save/Load</a></p>

<p class="whs2"><span style="color: #000000;"><font color=black >5.</font></span> 
 <a href="#CatalogUI">Catalog UI</a></p>

<p class="whs2"><span style="color: #000000;"><font color=black >6.</font></span> 
 <a href="#NewGeocoderUIforArcIMS">New Geocoder UI for ArcIMS services</a></p>

<p class="whs2"><span style="color: #000000;"><font color=black >7.</font></span> 
 <a href="#AdditionalDataFormatSupport">Additional data format support</a></p>

<p class="whs2"><span style="color: #000000;"><font color=black >8.</font></span> 
 <a href="#StandardSQLSupport">Standard SQL support</a></p>

<p class="whs2"><span style="color: #000000;"><font color=black >9.</font></span> 
 <a href="#DragAndDrop">Drag and Drop</a></p>

<p class="whs2"><span style="color: #000000;"><font color=black >10.</font></span> 
 <a href="#AdditionalAPIsForConnections">Additional APIs for connections 
 to data sources</a></p>

<p class="whs2"><span style="color: #000000;"><font color=black >11.</font></span> 
 <a href="#ShapefileSpatialIndexing">Shapefile spatial indexing</a></p>

<p class="whs2"><span style="color: #000000;"><font color=black >12.</font></span> 
 <a href="#NewTreeStyleTOCComponent">New tree-style TOC component</a></p>

<p class="whs2"><span style="color: #000000;"><font color=black >13.</font></span> 
 <a href="#NewContentChooserUI">New Content Chooser UI</a></p>

<p class="whs2"><span style="color: #000000;"><font color=black >14.</font></span> 
 <a href="#AttributeTableUIAndAPI">Attribute Table UI and API</a></p>

<p class="whs2"><span style="color: #000000;"><font color=black >15.</font></span> 
 <a href="#FeatureServiceExtentClipping">FeatureService Extent &quot;Clipping&quot;</a></p>

<p class="whs2"><span style="color: #000000;"><font color=black >16.</font></span> 
 <a href="#Image_Export_UI_dialog_box">Image Export UI dialog box</a></p>

<p class="whs2"><span style="color: #000000;"><font color=black >17.</font></span> 
 <a href="#Serialization_Deserialization">Serialization/Deserialization</a></p>

<p class="whs3"><span style="color: #000000;"><font color=black >18.</font></span> 
 <a href="#MacOSXSupport">Mac OS X support</a></p>

<p class="whs2">&nbsp;</p>

<h4 class="whs4"><a name=Server_sideMappingComponents></a><span 
 style="font-size: 10pt;"><font size=2 style="font-size:10pt;">1. Server-side Mapping Components</font></span> </h4>

<p class="whs5">A new package has been added 
 called com.esri.mo2.svr.map, which contains classes that can be used in 
 JSP or EJB Web-based mapping applications. The main component for this 
 is a new server Map that implements the map.core.Map interface, the same 
 interface that is implemented by the ui.bean.Map. The APIs for this new 
 server map are similar to its UI map counterpart, such as addLayer, getLayer, 
 draw, set/getCoordinateSystem, TransformWorldToPixel, TransformPixelToWorld, 
 get/setExtent, get/setScale, etc.</p>

<p class="whs5">The obvious distinction it 
 has from the UI-based map is that server map contains critical methods 
 such as getImage, for exporting the map display in a &quot;map server&quot; 
 environment, and <span style="font-style: italic;"><I>get/setLogger</I></span> 
 for monitoring server map activities. </p>

<p class="whs5">The server map also contains 
 convenient APIs for doing commonly performed actions, such as computing 
 distances between two points, computing scales, zooming the display to 
 specific point locations, zooming to specified scales, buffering selected 
 features, &quot;bookmarking&quot; specified extents, managing AcetateLayer 
 sets, and more. </p>

<p class="whs5">There is a sample application 
 in the tutorial showing how to implement the base functionality of the 
 new server class. There are also several additional sample applications 
 for deploying MapObjects<span style="font-weight: bold;"><B>&#8212;</B></span>Java 
 in various server environments. Refer to <a href="Samples.htm#Server_samples">Server 
 samples</a> for more information.</p>

<p align="right" class="whs6"><a href="#WhatsNewInVersion2"><img src="to_top_image.gif" x-maintain-ratio="TRUE" width="47px" height="19px" border="0" class="img_whs7"></a> </p>

<h4 class="whs4"><a name=Projections></a><span 
 style="font-size: 10pt;"><font size=2 style="font-size:10pt;">2. Projections</font></span></h4>

<p class="whs5">MapObjects<span style="font-weight: bold;"><B>&#8212;</B></span>Java 
 now supports geodetic coordinate conversions and geodetic objects. Developers 
 can use a rich API to project and transform both features and images. 
 A referenced coordinate system can be applied to a Map, which will then 
 handle the transformation of layers as they are added to the Map. The 
 API allows developers to work with either projection &quot;strings&quot; 
 or projection &quot;IDs&quot;. </p>

<p class="whs5">The geodetic objects are stored 
 in a small, localizable file known as the Geodetic Database (com/esri/mo2/res/gdb/GeodeticDB.txt). 
 Developers can extend projection support by adding their own coordinate 
 transformation parameters into this ASCII database file. These additions 
 can be specialized projections, datum transformations, and conversions.</p>

<p class="whs5">To test-drive this new functionality, 
 simply start the Tutorial application and run the sample called &quot;Apply 
 Coordinate Systems to a Map&quot;. This will demonstrate how a projection 
 ID can be passed to a PEFactory class to return a ReferencedCoordinateSystem 
 object. This object can be passed to the Map's setCoordinateSystem method. 
 Layers are transformed as they are drawn on the Map. You can also try 
 out the CoordinateSysTreeFrame UI (com.esri.mo2.ui.geod package) found 
 in the JoViewPlus application. In JoViewPlus, add some data, and go to 
 the &quot;Tools--&gt;Projection&quot; menu option. </p>

<p align="right" class="whs6"><a href="#WhatsNewInVersion2"><img src="to_top_image.gif" x-maintain-ratio="TRUE" width="47px" height="19px" border="0" class="img_whs7"></a> </p>

<h4 class="whs4"><a name=LayoutView></a><span 
 style="font-size: 10pt;"><font size=2 style="font-size:10pt;">3. Layout View</font></span></h4>

<p class="whs5">At this version, a &quot;layout&quot; 
 package of UI components has been introduced. The <span style="font-weight: bold; font-style: italic;"><I><B>com.esri.mo2.ui.lyt</B></I></span> 
 package provides developers with the tools for building cartographic layouts 
 that can be printed at various sizes. With these APIs, map components 
 and elements can be placed and arranged on a page layout, such as Map 
 frames, Overview Map frames, North arrows, scalebars, legends, graphic 
 and text primitives, and image elements. Page properties can be applied 
 to support many different page sizes, as well as both portrait and landscape 
 orientations. Zoom in, Zoom out, and Panning tools are provided to allow 
 interaction with the page view, and a ZoomPanToolBar is exposed to interact 
 with the Map extent of an &quot;activated&quot; Map element within the 
 layout. For each element in the layout, there is a property dialog box 
 that can be used to update the properties of that element type. To see 
 a full implementation of the layout APIs, start the JoViewPlus application 
 and switch the view from Map View to Layout View.</p>

<p align="right" class="whs8"><span style="color: #0000ff;"><font color=blue ><a href="#WhatsNewInVersion2"><img src="to_top_image.gif" x-maintain-ratio="TRUE" width="47px" height="19px" border="0" class="img_whs7"></a></font></span></p>

<h4 class="whs4"><a name=ProjectSaveLoad></a><span 
 style="font-size: 10pt;"><font size=2 style="font-size:10pt;">4. &quot;Project&quot; Save/Load</font></span></h4>

<p class="whs5">The package <span style="font-weight: bold; font-style: italic;"><I><B>com.esri.mo2.axl.aims.conf</B></I></span> 
 contains APIs that provide support for loading/saving ArcXML configuration 
 files. An implementation of these APIs is found in the JoViewPlus application. 
 You will find a new toolbar in the application for managing the saving 
 and loading of configuration or &quot;project&quot; files. These config 
 files are saved to ArcXML (AXL). See the ProjectToolbar class, found in 
 the com.esri.mo2.ui.tb package. </p>

<p align="right" class="whs6"><a href="#WhatsNewInVersion2"><img src="to_top_image.gif" x-maintain-ratio="TRUE" width="47px" height="19px" border="0" class="img_whs7"></a> </p>

<h4 class="whs4"><a name=CatalogUI></a><span 
 style="font-size: 10pt;"><font size=2 style="font-size:10pt;">5. Catalog UI</font></span> </h4>

<p class="whs5">Version 2.0 now contains a 
 new data browsing UI component called 'Catalog'. The APIs are found in 
 the <span style="font-weight: bold; font-style: italic;"><I><B>com.esri.mo2.ui.cat</B></I></span> 
 package. The Catalog provides a user interface component for selecting 
 and displaying information about GIS data objects. To try out the Catalog, 
 start the JoViewPlus sample application and go to the &quot;Tools--&gt;Catalog&quot; 
 menu item.</p>

<p class="whs5">Catalog provides a tree view 
 on the left side of its user interface, plus it provides further information 
 about the GIS data objects in a property panel on the right-hand side. 
 By clicking the icon that represents a particular GIS data object, properties 
 of the object and an optional preview may be displayed in the Property 
 panel.</p>

<p align="right" class="whs6"><span style="font-weight: bold; color: #0000ff;"><font color=blue ><B><a href="#WhatsNewInVersion2"><img src="to_top_image.gif" x-maintain-ratio="TRUE" width="47px" height="19px" border="0" class="img_whs7"></a></B></font></span> </p>

<h4 class="whs4"><a name=NewGeocoderUIforArcIMS></a><span 
 style="font-size: 10pt;"><font size=2 style="font-size:10pt;">6. New Geocoder UI for ArcIMS services</font></span></h4>

<p class="whs5">A new Geocoding interface 
 has been introduced. It is part of the upcoming project for including 
 local geocoding objects in the MapObjects<span style="font-weight: bold;"><B>&#8212;</B></span>Java 
 product but has been included at 2.0 for consuming ArcIMS geocoding services. 
 To see this new component in the JoViewPlus sample application, add an 
 ArcIMS service layer that contains geocoding, and open the Find dialog 
 box. There is a new tab called 'Addresses'. Enter the 'geocoder' object 
 that is attached to the service layer, and enter a street address. Click 
 the Find button to return the results.</p>

<p class="whs5">This new UI is found in the 
 com.esri.mo2.ui.gcd package.</p>

<p align="right" class="whs6"><a href="#WhatsNewInVersion2"><img src="to_top_image.gif" x-maintain-ratio="TRUE" width="47px" height="19px" border="0" class="img_whs7"></a> </p>

<h4 class="whs4"><a name=AdditionalDataFormatSupport></a><span 
 style="font-size: 10pt;"><font size=2 style="font-size:10pt;">7. Additional data format support</font></span> </h4>

<p class="whs5">For a complete listing of 
 new and old supported data formats at 2.0, please see <a href="supported_image_formats.htm" style="color: #000080;">Supported 
 data formats</a>.</p>

<p align="right" class="whs6">&nbsp;<span style="font-weight: bold; color: #0000ff;"><font color=blue ><B><a 
 href="#WhatsNewInVersion2"><img src="to_top_image.gif" x-maintain-ratio="TRUE" width="47px" height="19px" border="0" class="img_whs7"></a></B></font></span></p>

<h4 class="whs4"><a name=StandardSQLSupport></a><span 
 style="font-size: 10pt;"><font size=2 style="font-size:10pt;">8</font></span><span style="font-size: 10pt;"><font size=2 style="font-size:10pt;">. Standard 
 SQL support</font></span></h4>

<p class="whs5">At this version, developers 
 can now construct query statements using standard SQL. For example, the 
 following queries will be successfully parsed when used in a QueryFilter:</p>

<p class="whs9">(ADDRESS = '1150 V'||'an 
 Ne'+'ss Ave')</p>

<p class="whs9">(ADDRESS = (('1150 
 V')||'an Ne'+'ss Ave'))</p>

<p class="whs9">ADDRESS = '1150 Van 
 Ness Ave'</p>

<p class="whs9">(ADDRESS &lt;&gt; 
 (('1150 V')||'an Ne'+'ss Ave'))</p>

<p class="whs9">(ADDRESS &gt;= (('1150 
 V')||'an Ne'+'ss Ave'))</p>

<p class="whs9">(ADDRESS &lt;= (('1150 
 V')||'an Ne'+'ss Ave'))</p>

<p class="whs9">(ADDRESS &lt; (('1150 
 V')||'an Ne'+'ss Ave'))</p>

<p class="whs9">(ADDRESS &gt; (('1150 
 V')||'an Ne'+'ss Ave'))</p>

<p class="whs9">(ADDRESS &lt; (('1150 
 V')||'an Ne'+'ss Ave') and NAME = 'Pizza' or ADDR_ORIG = '1450 24th Ave')</p>

<p class="whs9">&nbsp;(ZIP 
 &lt; '941'+'12')</p>

<p class="whs9">(SALES = 5*10-40)</p>

<p class="whs9">(SALES &lt; 5*(5+5))</p>

<p class="whs9">(SALES = 2*4+5.76)</p>

<p class="whs9">(SALES &gt; 1*2*3*4*5*6*7*8*9/9/8/7/6/5/4/3/2/1)</p>

<p class="whs9">(not SALES &gt; 1*2*3*4*5*6*(7*(8*(9/9)/8)/7)/6/5/4/3/2/1)</p>

<p class="whs9">(DF = 'Sep 28, 1990 
 12:00:00 AM')</p>

<p class="whs9">(DF = {ts '1990-09-28'})</p>

<p class="whs9">(DF &gt; 'Sep 28, 
 1990 12:00:00 AM')</p>

<p class="whs9">(DF &gt; {ts '1990-09-28'})</p>

<p class="whs9">(ADDR_ORIG &lt; '1180 
 Cayuga Ave')</p>

<p class="whs9">('1180 Cayuga Ave' 
 &gt; ADDR_ORIG)</p>

<p class="whs9">(not &nbsp;ZIP_STD 
 &nbsp;= &nbsp;'94103'||'-3823')</p>

<p class="whs9">(ZIP_STD = '94103'||'-3823')</p>

<p class="whs9">(ZIP_STD &lt; '94103'||'-3823')</p>

<p class="whs9">(ZIP_STD &gt; '94103'||'-3823')</p>

<p class="whs9">(ZIP_STD &lt;&gt; 
 '94103'||'-3823')</p>

<p class="whs9">(ZIP_STD &gt;= '94103'||'-3823')</p>

<p class="whs9">(ZIP_STD &lt;= '94103'||'-3823')</p>

<p class="whs9">(ZIP_STD &gt;= '94103'||'-3823')</p>

<p class="whs9">(ZIP_STD != '94103'||'-3823')</p>

<p class="whs9">(not ZIP_STD &gt;= 
 '94103'||'-3823')</p>

<p class="whs9">(MATCH_CODE like 'E024')</p>

<p class="whs9">(MATCH_CODE like 'E0'+'24')</p>

<p class="whs9">(MATCH_CODE like 'E0'+'%')</p>

<p class="whs9">(MATCH_CODE not like 
 'E0'+'%')</p>

<p class="whs9">(MATCH_CODE not like 
 'E0'+'%' and ADDR_ORIG = '1180 Cayuga Ave')</p>

<p class="whs9">ZIP in ('94103')</p>

<p class="whs9">ZIP in ('94103', '94111')</p>

<p class="whs9">ZIP in ('94103', '94111', 
 '94115')</p>

<p class="whs9">'94109' in (ZIP, SALES)</p>

<p class="whs9">('94'+'109' in (ZIP, 
 SALES, STORE_ID))</p>

<p class="whs9">(ZIP is null)</p>

<p class="whs9">(ZIP is not null)</p>

<p class="whs9">(not ZIP is not null)</p>

<p class="whs9">(not ZIP is null)</p>

<p class="whs9">(SALES between 5*2 
 and 36/2.5)</p>

<p class="whs9">(ZIP not between '94109' 
 and '94131')</p>

<p class="whs9">(ZIP between '94109' 
 and '94131')</p>

<p class="whs9">(ZIP between '9'||'41'+'18' 
 and '941'+'21')</p>

<p class="whs9">(ZIP between '9'||'41'+'18' 
 and '941'+'21' and STORE_ID between '28' and '18')</p>

<p class="whs9">(SALES &lt;&gt; 10.69 
 and (SALES = 10.69 or SALES between 10.0 and 14.85))</p>

<p class="whs9">(SALES between 1*2*3*4*5*6*(7*(8*(9/9)/8)/7)/6/5/4/3/2/1 
 and 3.28)</p>

<p class="whs9">((SALES between 1*2*3*4*5*6*(7*(8*(9/9)/8)/7)/6/5/4/3/2/1 
 and 3.28) or (SALES = 19067/100 ))</p>

<p class="whs9">(ZIP = '94103' or 
 ZIP = '94102' and ZIP = '94111')</p>

<p class="whs9">(ZIP = '94103' or 
 ZIP = '94102' and ZIP = '94111')</p>

<p class="whs9">((ZIP = '94103' or 
 ZIP = '94102') and ZIP = '94111')</p>

<p class="whs9">((ZIP = '94103' or 
 ZIP = '94102') and not ZIP = '94111')</p>

<p class="whs9">(ZIP = '94103' or 
 ZIP = '94109' or ZIP = '94110' or ZIP = '94111' or ZIP = '94112' or ZIP 
 = '94114' or ZIP = '94115' or ZIP = '94116')</p>

<p class="whs9">SALES &lt; 10,69</p>

<p class="whs9">SALES between 1 and 
 10,9</p>

<p class="whs9">SALES in (10,69)</p>

<p class="whs9">SALES in (10,1,2,3) 
 </p>

<p align="right" class="whs10"><a href="#WhatsNewInVersion2"><span style="color: #0000ff; font-family: 'Lucida Console', monospace;"><font color=blue ><img src="to_top_image.gif" x-maintain-ratio="TRUE" width="47px" height="19px" border="0" class="img_whs7"></font></span></a></p>

<h4 class="whs4"><a name=DragAndDrop></a><span 
 style="font-size: 10pt;"><font size=2 style="font-size:10pt;">9</font></span><span style="font-size: 10pt;"><font size=2 style="font-size:10pt;">. Drag 
 and Drop</font></span> &nbsp;</h4>

<p class="whs5">Developers can now take advantage 
 of Drag and Drop APIs for data layers. This is demonstrated in the Catalog 
 component (in JoViewPlus), where, on certain platforms, end users can 
 highlight data objects, hold down certain platform-specific mouse buttons 
 and keys, and drag/drop the objects onto the Map or Toc. If your platform 
 supports a File Manager, shapefiles (.shp) and any of the supported image 
 files can be dragged. Open the Catalog UI in the JoViewPlus application 
 and select some layer sources. Try to drag them onto the Toc or the Map.</p>

<p class="whs11">On 
 Windows:</p>

<p class="whs5">Select one or many shapefiles 
 or image files listed in the Catalog UI. If one item is selected, left-click, 
 hold, and drag it into the Map or Toc. For multiple selections, use the 
 middle mouse button to drag and drop it over the Map or Toc.</p>

<p class="whs11">On 
 UNIX:</p>

<p class="whs5"><span style="font-family: Verdana, sans-serif;">Select 
 one item with the left mouse button. Click and hold the left mouse button 
 over the selected item and drag it over the Map or TOC. Release the mouse 
 button to drop. For multiple selections, use the middle mouse button to 
 drag and drop it over the Map or TOC.</span></p>

<p class="whs5">From the Catalog, &quot;drag/drop&quot; 
 can be used for dragging shapefiles, supported image formats, ArcSDE layers, 
 and ArcIMS layers.</p>

<p align="right" class="whs6"><a href="#WhatsNewInVersion2"><img src="to_top_image.gif" x-maintain-ratio="TRUE" width="47px" height="19px" border="0" class="img_whs7"></a> </p>

<h4 class="whs4"><a name=AdditionalAPIsForConnections></a><span 
 style="margin-left: 0px; font-size: 10pt;"><font size=2 style="font-size:10pt;">1</font></span><span style="font-size: 10pt;"><font size=2 style="font-size:10pt;">0.</font></span> 
 <span style="font-size: 10pt;"><font size=2 style="font-size:10pt;">Additional APIs for connections to data 
 sources</font></span> </h4>

<p class=Code
	style="font-family: Verdana, sans-serif; margin-left: 0px;">In the 
 previous version of MapObjects<span style="font-weight: bold;"><B>&#8212;</B></span>Java, 
 developers were able to &quot;connect&quot; to various LayerSources, depending 
 on the type of source. At version 2.0, there is a new set of Content APIs 
 to connect to GIS objects that are Datasets or Layers. These APIs are 
 found in the com.esri.mo2.src.* packages. Developers can write applications 
 that use &quot;Connection&quot; objects that connect to:</p>

<ul type="disc" class="whs12">
	
	<li class=kadov-p-CCode><p class=Code
								style="font-family: Verdana, sans-serif; margin-left: 0px;">File 
 systems (com.esri.mo2.src.file.FileSystemConnection)</p></li>
	
	<li class=kadov-p-CCode><p class=Code
								style="font-family: Verdana, sans-serif; margin-left: 0px;">ArcIMS 
 4.x (com.esri.mo2.client.aims.ArcIms4Connection)</p></li>
	
	<li class=kadov-p-CCode><p class=Code
								style="font-family: Verdana, sans-serif; margin-left: 0px;">ArcSDE 
 (com.esri.mo2.client.sde.SdeConnection)</p></li>
</ul>

<p class=Code
	style="font-family: Verdana, sans-serif; margin-left: 0px;">The Layersource 
 APIs have been deprecated, and it is now recommended to use the Content 
 API. See the com.esri.mo2.src.sys package for more details.</p>

<p class=Code
	style="font-family: Verdana, sans-serif; margin-left: 0px;">Additionally, 
 the string arguments for the setDataset method of com.esri.mo2.ui.bean.Layer 
 (design-time layer implementation) have been slightly modified. At 1.0.1, 
 the layer details for a shapefile looked something like this:</p>

<p class=Code
	style="font-family: Verdana, sans-serif; margin-left: 0px;">aLayer.setDataset(&quot;0;C:/ESRI/MOJ20/Samples/Data/USA/cities.shp&quot;);</p>

<p class=Code
	style="font-family: Verdana, sans-serif; margin-left: 0px;">This still 
 works. However, the following is the recommended usage at 2.0:</p>

<p class=Code
	style="font-family: Verdana, sans-serif; margin-left: 0px;">aLayer.setDataset(&quot;com.esri.mo2.src.file.FileSystemConnection!C:/ESRI/MOJ20/Samples/Data/USA/cities.shp!&quot;);</p>

<p align="right" class="whs8"><span style="color: #0000ff;"><font color=blue ><a href="#WhatsNewInVersion2"><img src="to_top_image.gif" x-maintain-ratio="TRUE" width="47px" height="19px" border="0" class="img_whs7"></a></font></span></p>

<h4 class="whs4"><a name=ShapefileSpatialIndexing></a><span 
 style="font-size: 10pt;"><font size=2 style="font-size:10pt;">11. Shapefile spatial indexing</font></span> </h4>

<p class="whs5">This version now supports 
 both the creation and use of the ESRI Spatial Index files (SBN/SBX). &nbsp;</p>

<p align="right" class="whs8"><span style="color: #0000ff;"><font color=blue ><a href="#WhatsNewInVersion2"><img src="to_top_image.gif" x-maintain-ratio="TRUE" width="47px" height="19px" border="0" class="img_whs7"></a></font></span></p>

<h4 class="whs4"><a name=NewTreeStyleTOCComponent></a><span 
 style="font-size: 10pt;"><font size=2 style="font-size:10pt;">12. New tree-style TOC component</font></span> &nbsp;</h4>

<p class="whs5">In addition to the traditional 
 <span style="font-weight: bold; font-style: italic;"><I><B>com.esri.mo2.ui.bean.TOC</B></I></span> 
 bean, there is a new TOC introduced at 2.0 that presents a map legend 
 in a JTree style. This is the Toc class in the <span style="font-weight: bold; font-style: italic;"><I><B>com.esri.mo2.ui.toc</B></I></span> 
 package.</p>

<p align="right" class="whs6"><a href="#WhatsNewInVersion2"><img src="to_top_image.gif" x-maintain-ratio="TRUE" width="47px" height="19px" border="0" class="img_whs7"></a> </p>

<h4 class="whs13"><a name=NewContentChooserUI></a>13. 
 New Content Chooser UI</h4>

<p class="whs5"><span style="font-family: Verdana, sans-serif;">The 
 new Content Chooser UI has been added at version 2.0. It provides a user-friendly 
 way for end users to identify and select one or more datasets to add to 
 the map. You can see the Content Chooser in the JoView and JoViewPlus 
 sample applications.</span></p>

<p align="right" class="whs6"><a href="#WhatsNewInVersion2"><img src="to_top_image.gif" x-maintain-ratio="TRUE" width="47px" height="19px" border="0" class="img_whs7"></a> </p>

<h4 class="whs4"><a name=AttributeTableUIAndAPI></a><span 
 style="font-size: 10pt;"><font size=2 style="font-size:10pt;">14. Attribute Table UI and API</font></span> </h4>

<p class="whs5">There is now an API in package 
 <span style="font-weight: bold; font-style: italic;"><I><B>com.esri.mo2.ui.tbl</B></I></span> 
 that provides a UI for viewing, sorting, and selecting rows from a layer's 
 attribute table. The layer source may be a shapefile, and ArcIMS FeatureService, 
 ArcSDE, or even a dBASE table. To see this capability, use the Catalog 
 UI in the JoViewPlus sample application. Browse to a shapefile, for example, 
 and then in right-hand panel, select the Preview tab. This displays the 
 data as a thumbnail. At the bottom of this panel, there is a combo box. 
 Select the &quot;Table&quot; to view the attributes.</p>

<p align="right" class="whs6"><a href="#WhatsNewInVersion2"><img src="to_top_image.gif" x-maintain-ratio="TRUE" width="47px" height="19px" border="0" class="img_whs7"></a> </p>

<h4 class="whs4"><a name=FeatureServiceExtentClipping></a><span 
 style="font-size: 10pt;"><font size=2 style="font-size:10pt;">15. FeatureService Extent &quot;Clipping&quot;</font></span></h4>

<p class="whs5">In version 2.0, there is a 
 new property in the com/esri/mo2/res/props/tilecache.properties file called 
 &quot;clip_to_extent&quot;. This file can be found in the esri_mo20res.jar. 
 In cases where a MapObjects application is accessing ArcIMS 4.x feature 
 services, MapObjects code will check for features that may have been concurrently 
 edited outside of the original geographic extent of the service. This 
 happens by default (clip_to_extent=false). If this property is set to 
 'true', the FeatureClass data will be clipped to the original extent of 
 the service defined. This means that if edits are made to the database 
 that fall outside of this original extent, they will not be displayed, 
 since the cached features are being used. By keeping &quot;clip_to_extent=false&quot;, 
 however, performance will be impacted, since more retrievals to the server 
 will take place to search for additional features.</p>

<p align="right" class="whs6"><a href="#WhatsNewInVersion2"><img src="to_top_image.gif" x-maintain-ratio="TRUE" width="47px" height="19px" border="0" class="img_whs7"></a> </p>

<p class="whs14"><a name=Image_Export_UI_dialog_box></a>16. 
 Image Export UI dialog box</p>

<p class="whs5">New image export functionality 
 has been incorporated into version 2.0. The com.esri.mo2.map.core.Canvas 
 interface has been added with support for map- and layout-based exports. 
 Based on the Image Writers types supported by the com.esri.mo2.map.img.ImageSupport 
 interface, the current map or layout can be exported in an image file.</p>

<p class="whs5">When using JoViewPlus, the 
 Export to Image menu item in the File menu brings up the currently displayed 
 map or layout. If the image to be outputted is a Layout, an appropriate 
 DPI (dots-per-inch) is required.</p>

<p class="whs5">The Image Export dialog box 
 itself allows you to view, resize, and export the map/layout. Clicking 
 the Export button allows you to save the map/layout to the preferred image 
 format.</p>

<p align="right" class="whs15"><a href="#WhatsNewInVersion2"><img src="to_top_image.gif" x-maintain-ratio="TRUE" width="47px" height="19px" border="0" class="img_whs7"></a></p>

<p class="whs14"><a name=Serialization_Deserialization></a>17. 
 Serialization/Deserialization</p>

<p class="whs5">Maps and Layouts can be serialized 
 and deserialized into projects or configuration files using ArcXML 1.1 
 much the same way as map configuration files are saved and used by ArcIMS 
 services. To achieve this, the ArcXML 1.1 specification was extended to 
 support additional Workspace objects for custom data sources. In addition, 
 the semantics of several tags that are used by ArcIMS software's ArcMapServer 
 extension have been redefined to support the serialization of Layout objects. 
 </p>

<p align="right" class="whs15"><a href="#WhatsNewInVersion2"><img src="to_top_image.gif" x-maintain-ratio="TRUE" width="47px" height="19px" border="0" class="img_whs7"></a></p>

<p class="whs14"><a name=MacOSXSupport></a>18. 
 Mac OS X support</p>

<p class="whs5">Apple's Mac OS X is now supported 
 with the current implementation of Java 1.4.1 (<a href="http://www.apple.com/java/"
													target=_blank
													style="font-weight: bold;">www.apple.com/java/</a>). 
 The user interface components have been modified to adhere to the Aqua 
 interface. Custom icons have been created for each of the resources in 
 the esri_mo20res.jar file to accommodate the aqua look and feel. To see 
 the various icons and for more information on utilizing the look-and-feel 
 capabilities, refer to the IconViewer utility in the MOJ20/Utilities folder. 
 Since Apple's current Java version does not support all the printing APIs 
 used by MapObjects<span style="font-weight: bold;"><B>&#8212;</B></span>Java, 
 an image export dialog has been added to allow outputting maps and layouts 
 as images, which can be printed using an Imaging utility<span style="font-weight: bold;"><B>&#8212;</B></span>for 
 example, Preview. For more information on this component, refer to #16: 
 Image Export UI Dialog box.</p>

<p align="right" class="whs15"><img src="to_top_image.gif" x-maintain-ratio="TRUE" width="47px" height="19px" border="0" class="img_whs7"></p>

<script type="text/javascript" language="javascript1.2">
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);
//-->
</script>
</body>

</html>
